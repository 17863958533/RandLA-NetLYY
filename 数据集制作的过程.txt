1.首先用天宝的软件进行点云标注和分类，将每一类点云导出为LAS1.2格式。
2.使用CC将LAS1.2格式的点云转为txt格式，并且确保每一类点云对应一个txt文件，统计好每一类地物的点的总数。
3.将每一类进行格式调整，确定每一行格式为x y z r g b l, 其中l代表的每一类地物的标签，可以写一个python脚本处理。
4.将标记好的每一个txt采用随机混合的方式融合成一个txt。
5.用CC打开融合后的txt，划分trainData和valData。
6.将6类未标记的txt加载到CC中，合并成一个，再次划分testData。
7.将准备好的trainData、valData、testData放到original文件夹中。
8.设置好二次采样率，一般为0.06，如果点云非常稠密则设置为0.5，并检查main.py文件。
9.检查ignore.label的值，如果有其余类参与训练，最初的时候就把其余类标记为0，这个ignore.label也设置为0，此时tool.py脚本里面的num_class设置的数量和权值矩阵的维度一样，是不包含0类物体的维度；如果没有其余类，那就将ignore.label空着，此时tool.py脚本里面的num_class设置的数量和权值矩阵的维度一样即可。我们经过测试需要将ignore.label空着，否则训练的时候可能会报错。
10.显存小的话注意调整bach_size，效果不好的话注意调整学习率和批量训练的点数62235，调小批量训练的点数表示点云比较稀疏，反之亦然。
11.训练后会在result/snap文件夹下得到.meta文件，使用测试命令的时候记得--model_path配置为.meta文件所在的路径的meta文件。
12.测试后会在test文件中得到预测出的label，使用python脚本将对应的点匹配在testData当中。

